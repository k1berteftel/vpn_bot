import datetime

from aiogram.types import CallbackQuery, User, Message
from aiogram_dialog import DialogManager, ShowMode
from aiogram_dialog.api.entities import MediaAttachment
from aiogram_dialog.widgets.kbd import Button, Select
from aiogram_dialog.widgets.input import ManagedTextInput

from services.vpn.manager import AsyncVPNManager
from database.action_data_class import DataInteraction
from config_data.config import load_config, Config
from states.state_groups import startSG, PaymentSG, VpnSG


config: Config = load_config()


async def menu_getter(event_from_user: User, dialog_manager: DialogManager, **kwargs):
    if dialog_manager.start_data:
        dialog_manager.dialog_data.update(dialog_manager.start_data)
        dialog_manager.start_data.clear()
    vpn_id = dialog_manager.dialog_data.get('vpn_id')
    session: DataInteraction = dialog_manager.middleware_data.get('session')
    vpn = await session.get_vpn_by_id(vpn_id)
    text = (f'<b>{vpn.name}:</b>\n\n<code>{vpn.link}</code>\n\n<b>üìÖ –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏:</b>\n<blockquote>'
            f'‚è≥ –û—Å—Ç–∞–ª–æ—Å—å: <b>{(vpn.expires_at - datetime.datetime.now()).days}</b></blockquote>\n'
            f'üõë –ò—Å—Ç–µ–∫–∞–µ—Ç: {vpn.expires_at.strftime("%d-%m-%Y %H:%M")}')
    return {'text': text}


async def close_dialog(clb: CallbackQuery, widget: Button, dialog_manager: DialogManager):
    await clb.message.delete()
    if dialog_manager.has_context():
        await dialog_manager.done()
        try:
            await clb.bot.delete_message(chat_id=clb.from_user.id, message_id=clb.message.message_id - 1)
        except Exception:
            ...
        counter = 1
        while dialog_manager.has_context():
            await dialog_manager.done()
            try:
                await clb.bot.delete_message(chat_id=clb.from_user.id, message_id=clb.message.message_id + counter)
            except Exception:
                ...
            counter += 1
    await dialog_manager.start(startSG.start)


async def connect_menu_getter(event_from_user: User, dialog_manager: DialogManager, **kwargs):
    vpn_id = dialog_manager.dialog_data.get('vpn_id')
    session: DataInteraction = dialog_manager.middleware_data.get('session')
    manager: AsyncVPNManager = dialog_manager.middleware_data.get('vpn_manager')
    vpn = await session.get_vpn_by_id(vpn_id)
    url = manager.generate_deep_link(vpn.link)
    text = (f'<b>üìã–í–∞—à–∞ —Å—Å—ã–ª–∫–∞:</b>\n\n<code>{vpn.link}</code>\n\n<b>1Ô∏è‚É£–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –≤–∞—à–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:</b>\n<blockquote>'
            f'–°—Å—ã–ª–∫–∞: https://v2raytun.art/?yclid=13922034514585714687</blockquote>\n\n'
            f'<b>2Ô∏è‚É£–ê–≤—Ç–æ-–∏–º–ø–æ—Ä—Ç</b>\n<blockquote>\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "üì°–ü–æ–¥–∫–ª—é—á–∏—Ç—å" –Ω–∏–∂–µ'
            f'</blockquote>\n\n'
            f'<b>3Ô∏è‚É£–í–∫–ª—é—á–∏—Ç–µ VPN</b>\n\n‚úÖ –ì–æ—Ç–æ–≤–æ! –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–∞–º–æ –≤—Å—ë –Ω–∞—Å—Ç—Ä–æ–∏—Ç.')
    return {
        'text': text,
        'url': f'https://{config.site.domain}//connect?url={url}'
    }


async def del_vpn(clb: CallbackQuery, widget: Button, dialog_manager: DialogManager):
    vpn_id = dialog_manager.dialog_data.get('vpn_id')
    session: DataInteraction = dialog_manager.middleware_data.get('session')
    manager: AsyncVPNManager = dialog_manager.middleware_data.get('vpn_manager')
    vpn = await session.get_vpn_by_id(vpn_id)
    status = await manager.delete_vpn(clb.from_user.id, vpn.client_id)
    if not status:
        await clb.answer('–í–æ –≤—Ä–µ–º—è —É–¥–∞–ª–µ–Ω–∏—è —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É')
        return
    await session.del_user_vpn(vpn_id)
    await clb.answer(f'{vpn.name} –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...')
    await clb.message.delete()
    if dialog_manager.has_context():
        await dialog_manager.done()
        try:
            await clb.bot.delete_message(chat_id=clb.from_user.id, message_id=clb.message.message_id - 1)
        except Exception:
            ...
        counter = 1
        while dialog_manager.has_context():
            await dialog_manager.done()
            try:
                await clb.bot.delete_message(chat_id=clb.from_user.id, message_id=clb.message.message_id + counter)
            except Exception:
                ...
            counter += 1
    await dialog_manager.start(startSG.start)